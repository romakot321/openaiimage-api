"""add positions and task model_id

Revision ID: 219c58d5a528
Revises: d8499551eadc
Create Date: 2025-05-21 13:52:34.114801

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '219c58d5a528'
down_revision: Union[str, None] = 'd8499551eadc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_task_requests_id', table_name='task_requests')
    op.drop_table('task_requests')
    op.drop_index('ix_task_images_id', table_name='task_images')
    op.drop_table('task_images')
    op.drop_index('ix_context_entitys_id', table_name='context_entitys')
    op.create_index(op.f('context_entitys_id_idx'), 'context_entitys', ['id'], unique=False)
    op.drop_index('ix_contexts_id', table_name='contexts')
    op.create_index(op.f('contexts_id_idx'), 'contexts', ['id'], unique=False)
    op.add_column('prompt_categories', sa.Column('position', sa.Integer(), nullable=True))
    op.drop_index('ix_prompt_categories_id', table_name='prompt_categories')
    op.create_index(op.f('prompt_categories_id_idx'), 'prompt_categories', ['id'], unique=False)
    op.drop_index('ix_prompt_userinputs_id', table_name='prompt_userinputs')
    op.create_index(op.f('prompt_userinputs_id_idx'), 'prompt_userinputs', ['id'], unique=False)
    op.add_column('prompts', sa.Column('position', sa.Integer(), nullable=True))
    op.drop_index('ix_prompts_id', table_name='prompts')
    op.create_index(op.f('prompts_id_idx'), 'prompts', ['id'], unique=False)
    op.alter_column('task_items', 'result_url',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_index('ix_task_items_id', table_name='task_items')
    op.create_index(op.f('task_items_id_idx'), 'task_items', ['id'], unique=False)
    op.add_column('tasks', sa.Column('model_id', sa.Uuid(), nullable=True))
    op.drop_index('ix_tasks_id', table_name='tasks')
    op.create_index(op.f('tasks_id_idx'), 'tasks', ['id'], unique=False)
    op.create_foreign_key(op.f('tasks_model_id_fkey'), 'tasks', 'prompts', ['model_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('tasks_model_id_fkey'), 'tasks', type_='foreignkey')
    op.drop_index(op.f('tasks_id_idx'), table_name='tasks')
    op.create_index('ix_tasks_id', 'tasks', ['id'], unique=False)
    op.drop_column('tasks', 'model_id')
    op.drop_index(op.f('task_items_id_idx'), table_name='task_items')
    op.create_index('ix_task_items_id', 'task_items', ['id'], unique=False)
    op.alter_column('task_items', 'result_url',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index(op.f('prompts_id_idx'), table_name='prompts')
    op.create_index('ix_prompts_id', 'prompts', ['id'], unique=False)
    op.drop_column('prompts', 'position')
    op.drop_index(op.f('prompt_userinputs_id_idx'), table_name='prompt_userinputs')
    op.create_index('ix_prompt_userinputs_id', 'prompt_userinputs', ['id'], unique=False)
    op.drop_index(op.f('prompt_categories_id_idx'), table_name='prompt_categories')
    op.create_index('ix_prompt_categories_id', 'prompt_categories', ['id'], unique=False)
    op.drop_column('prompt_categories', 'position')
    op.drop_index(op.f('contexts_id_idx'), table_name='contexts')
    op.create_index('ix_contexts_id', 'contexts', ['id'], unique=False)
    op.drop_index(op.f('context_entitys_id_idx'), table_name='context_entitys')
    op.create_index('ix_context_entitys_id', 'context_entitys', ['id'], unique=False)
    op.create_table('task_images',
    sa.Column('external_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text("(now() AT TIME ZONE 'utc'::text)"), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='task_images_task_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='task_images_pkey')
    )
    op.create_index('ix_task_images_id', 'task_images', ['id'], unique=False)
    op.create_table('task_requests',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('schema', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text("(now() AT TIME ZONE 'utc'::text)"), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='task_requests_task_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='task_requests_pkey')
    )
    op.create_index('ix_task_requests_id', 'task_requests', ['id'], unique=False)
    # ### end Alembic commands ###
